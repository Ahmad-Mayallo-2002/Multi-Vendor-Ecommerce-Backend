# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccessToken {
  id: String!
  role: Role!
  token: String!
}

type Address {
  city: String!
  country: String!
  createdAt: DateTime!
  id: String!
  order: Order!
  state: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Cart {
  cartItems: [CartItem!]!
  createdAt: DateTime!
  id: String!
  totalPrice: Float!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type CartItem {
  cart: Cart!
  createdAt: DateTime!
  id: String!
  priceAtPayment: Float!
  product: Product!
  quantity: Int!
  updatedAt: DateTime!
}

type Category {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  products: [Product!]!
  updatedAt: DateTime!
}

input CreateAddressInput {
  city: String!
  country: String!
  state: String!
  userId: String!
}

input CreateCategoryInput {
  description: String!
  name: String!
  user: String!
}

input CreateFollowingInput {
  userId: String!
  vendorId: String!
}

input CreatePaymentMethodInput {
  method: Payment!
  orderId: String!
  totalPrice: Float!
  userId: String!
}

input CreateProductInput {
  categoryId: String!
  description: String!
  discount: Float!
  image: String!
  price: Float!
  stock: Int!
  title: String!
  vendorId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

input CreateVendorInput {
  companyName: String!
  contactEmail: String!
  contactPhone: String!
  description: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Following {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
  vendor: Vendor!
  vendorId: String!
}

type FollowingsAndCount {
  count: Int!
  followings: [Following!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addFollowing(input: CreateFollowingInput!): Following!
  approveVendor(approve: Boolean!, vendorId: String!): String!
  cancelFollowing(vendorId: String!): Boolean!
  createAddress(input: CreateAddressInput!): Address!
  createCategory(input: CreateCategoryInput!): Category!
  createPaymentMethod(createPaymentMethodInput: CreatePaymentMethodInput!): PaymentMethod!
  createProduct(image: Upload!, input: CreateProductInput!): Product!
  login(input: LoginInput!): AccessToken!
  removeAddress(addressId: String!): Boolean!
  removeCart(userId: String!): Boolean!
  removeCategory(categoryId: String!): Boolean!
  removeOrder(id: String!): Boolean!
  removePaymentMethod(id: Int!): PaymentMethod!
  removeProduct(id: String!): Boolean!
  removeUser(userId: String!): Boolean!
  removeVendor(vendorId: String!): Boolean!
  seedAdmin(userId: String!): String!
  signupUser(input: CreateUserInput!): User!
  signupVendor(logo: Upload!, user: CreateUserInput!, vendor: CreateVendorInput!): Vendor!
  updateAddress(addressId: String!, input: UpdateAddressInput!): Boolean!
  updateCategory(categoryId: String!, input: UpdateCategoryInput!): Category!
  updateOrderStatus(id: String!, status: Status!): Boolean!
  updatePaymentMethod(updatePaymentMethodInput: UpdatePaymentMethodInput!): PaymentMethod!
  updateProduct(id: String!, image: Upload, input: UpdateProductInput!): Product!
  updateUser(input: UpdateUserInput!, userId: String!): Boolean!
  updateVendor(approve: Boolean!, vendorId: String!): Boolean!
}

type Order {
  address: Address!
  createdAt: DateTime!
  id: String!
  orderItems: [OrderItem!]!
  payment: PaymentMethod!
  status: Status!
  totalPrice: Float!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type OrderItem {
  createdAt: DateTime!
  id: String!
  order: Order!
  priceAtPayment: Float!
  product: Product!
  quantity: Int!
  updatedAt: DateTime!
}

"""Enum for Payment Method"""
enum Payment {
  CASH
  CREDIT_CARD
  PAYPAL
}

type PaymentMethod {
  createdAt: DateTime!
  id: String!
  method: Payment!
  order: Order!
  totalPrice: Float!
  updatedAt: DateTime!
}

type Product {
  cartItems: [CartItem!]!
  category: Category!
  categoryId: String!
  createdAt: DateTime!
  description: String!
  discount: Float!
  id: String!
  image: String!
  orderItems: [OrderItem!]!
  price: Float!
  stock: Int!
  title: String!
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
}

type Query {
  getAddress(addressId: String!): Address!
  getAddresses: [Address!]!
  getAllCarts: [Cart!]!
  getAllOrders: [Order!]!
  getAllUsers: [User!]!
  getCart(id: String!): Cart!
  getCategories: [Category!]!
  getCategory(categoryId: String!): Category!
  getProductById(id: String!): Product!
  getProducts: [Product!]!
  getProductsByCategory(category: String!): [Product!]!
  getProductsByVendor(vendorId: String!): [Product!]!
  getSingleOrder(id: String!): Order!
  getUser(userId: String!): User!
  getUserAddresses(userId: String!): [Address!]!
  getUserCart(userId: String!): Cart!
  getUserFollowings(userId: String!): FollowingsAndCount!
  getUserOrders(userId: String!): [Order!]!
  getVendor(vendorId: String!): Vendor!
  getVendorFollowers(vendorId: String!): FollowingsAndCount!
  getVendors: [Vendor!]!
  paymentMethod(id: Int!): PaymentMethod!
}

"""Role Enum"""
enum Role {
  SUPER_ADMIN
  USER
  VENDOR
}

"""Order Status Enum"""
enum Status {
  CANCELLED
  DELIVERED
  PENDING
  SHIPPED
}

input UpdateAddressInput {
  city: String
  country: String
  state: String
  userId: String
}

input UpdateCategoryInput {
  description: String
  name: String
  user: String
}

input UpdatePaymentMethodInput {
  id: Int!
  method: Payment
  orderId: String
  totalPrice: Float
  userId: String
}

input UpdateProductInput {
  categoryId: String
  description: String
  discount: Float
  image: String
  price: Float
  stock: Int
  title: String
  vendorId: String
}

input UpdateUserInput {
  email: String
  password: String
  username: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  addresses: [Address!]!
  cart: Cart!
  createdAt: DateTime!
  email: String!
  followings: [Following!]
  id: String!
  role: Role!
  updatedAt: DateTime!
  username: String!
  vendor: Vendor!
}

type Vendor {
  companyName: String!
  contactEmail: String!
  contactPhone: String!
  createdAt: DateTime!
  description: String!
  followers: [Following!]
  id: String!
  isApproved: Boolean!
  logo: String!
  products: [Product!]!
  rating: Float!
  updatedAt: DateTime!
  user: User
}

"""Total Price Scalar Stores as Cents"""
scalar price