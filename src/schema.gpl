# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccessToken {
  id: String!
  role: Role!
  token: String!
  vendorId: String
}

type Address {
  city: String!
  country: String!
  createdAt: DateTime!
  id: String!
  order: Order!
  state: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Cart {
  cartItems: [CartItem!]!
  createdAt: DateTime!
  id: String!
  totalPrice: Float!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type CartItem {
  cart: Cart!
  createdAt: DateTime!
  id: String!
  priceAtPayment: Float!
  product: Product!
  quantity: Int!
  updatedAt: DateTime!
}

type Category {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  products: [Product!]!
  updatedAt: DateTime!
}

input CreateAddressInput {
  city: String!
  country: String!
  state: String!
}

input CreateCartItemInput {
  productId: String!
  quantity: Int! = 1
}

input CreateCategoryInput {
  description: String!
  name: String!
  user: String!
}

input CreateFollowingInput {
  userId: String!
  vendorId: String!
}

input CreateProductInput {
  categoryId: String!
  description: String!
  discount: Float!
  image: Upload!
  price: Float!
  stock: Int!
  title: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

input CreateVendorInput {
  companyName: String!
  contactEmail: String!
  contactPhone: String!
  description: String!
  logo: Upload!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Following {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
  vendor: Vendor!
  vendorId: String!
}

type FollowingsAndCount {
  count: Int!
  followings: [Following!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addFollowing(input: CreateFollowingInput!): Following!
  addItemToCart(input: CreateCartItemInput!): CartItem!
  approveVendor(approve: Boolean!, vendorId: String!): String!
  cancelFollowing(vendorId: String!): Boolean!
  createAddress(input: CreateAddressInput!): Address!
  createCategory(input: CreateCategoryInput!): Category!
  createProduct(input: CreateProductInput!): Product!
  login(input: LoginInput!): AccessToken!
  removeAddress(addressId: String!): Boolean!
  removeCategory(categoryId: String!): Boolean!
  removeItemFromCart(itemId: String!): Boolean!
  removeOrder(id: String!): Boolean!
  removeProduct(id: String!): Boolean!
  removeUser: Boolean!
  removeVendor: Boolean!
  seedAdmin(userId: String!): String!
  signupUser(input: CreateUserInput!): User!
  signupVendor(user: CreateUserInput!, vendor: CreateVendorInput!): Vendor!
  updateAddress(addressId: String!, input: UpdateAddressInput!): Boolean!
  updateCategory(categoryId: String!, input: UpdateCategoryInput!): Category!
  updateItemCart(input: UpdateCartItemInput!, itemId: String!): Boolean!
  updateProduct(id: String!, input: UpdateProductInput!): Product!
  updateUser(input: UpdateUserInput!): Boolean!
  updateVendor(input: UpdateVendorInput!): Boolean!
}

type Order {
  address: Address!
  addressId: String!
  createdAt: DateTime!
  id: String!
  orderItems: [OrderItem!]!
  payment: PaymentMethod!
  totalPrice: Float!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type OrderItem {
  createdAt: DateTime!
  id: String!
  order: Order!
  priceAtPayment: Float!
  product: Product!
  quantity: Int!
  updatedAt: DateTime!
}

"""Enum for Payment Method"""
enum Payment {
  CARD
  CASH
  PAYPAL
}

type PaymentMethod {
  createdAt: DateTime!
  id: String!
  method: Payment!
  order: Order!
  totalPrice: Float!
  updatedAt: DateTime!
}

type Product {
  cartItems: [CartItem!]!
  category: Category!
  categoryId: String!
  createdAt: DateTime!
  description: String!
  discount: Float!
  id: String!
  image: String!
  orderItems: [OrderItem!]!
  price: Float!
  public_id: String!
  stock: Int!
  title: String!
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
}

type Query {
  getAddress(addressId: String!): Address!
  getAddresses: [Address!]!
  getAllCarts: [Cart!]!
  getAllOrders(skip: Int!, sortByCreated: Sort, take: Int!): [Order!]!
  getAllUsers(skip: Int!, sortByCreated: Sort, take: Int!): [User!]!
  getCart(id: String!): Cart!
  getCategories: [Category!]!
  getCategory(categoryId: String!): Category!
  getProductById(id: String!): Product!
  getProducts(skip: Int!, sortByCreated: Sort, sortByFollowings: Boolean = false, sortByPrice: Sort, take: Int!): [Product!]!
  getProductsByCategory(category: String!): [Product!]!
  getProductsByVendor(vendorId: String!): [Product!]!
  getSingleOrder(id: String!): Order!
  getUser: User!
  getUserAddresses: [Address!]!
  getUserCart: Cart!
  getUserFollowings(skip: Int!, sortByCreated: Sort, take: Int!, userId: String!): FollowingsAndCount!
  getUserOrders(skip: Int!, sortByCreated: Sort, take: Int!, userId: String!): [Order!]!
  getVendor: Vendor!
  getVendorFollowers(skip: Int!, sortByCreated: Sort!, take: Int!, vendorId: String!): FollowingsAndCount!
  getVendors: [Vendor!]!
}

"""Role Enum"""
enum Role {
  SUPER_ADMIN
  USER
  VENDOR
}

"""Enum for Sort By ASC or DESC"""
enum Sort {
  ASC
  DESC
}

input UpdateAddressInput {
  city: String
  country: String
  state: String
}

input UpdateCartItemInput {
  quantity: Int! = 1
}

input UpdateCategoryInput {
  description: String
  name: String
  user: String
}

input UpdateProductInput {
  data: UpdateProductInputData!
  image: Upload
}

input UpdateProductInputData {
  categoryId: String
  description: String
  discount: Float
  price: Float
  stock: Int
  title: String
}

input UpdateUserInput {
  email: String
  password: String
  username: String
}

input UpdateVendorInput {
  data: UpdateVendorInputData!
  logo: Upload
}

input UpdateVendorInputData {
  companyName: String
  contactEmail: String
  contactPhone: String
  description: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  addresses: [Address!]!
  cart: Cart!
  createdAt: DateTime!
  email: String!
  followings: [Following!]
  id: String!
  role: Role!
  updatedAt: DateTime!
  username: String!
  vendor: Vendor!
}

type Vendor {
  companyName: String!
  contactEmail: String!
  contactPhone: String!
  createdAt: DateTime!
  description: String!
  followers: [Following!]!
  id: String!
  isApproved: Boolean!
  logo: String!
  products: [Product!]!
  public_id: String!
  rating: Float!
  updatedAt: DateTime!
  user: User
}

"""Total Price Scalar Stores as Cents"""
scalar price